{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\reactstate\\\\test2\\\\src\\\\components\\\\Todo.js\";\nimport React, { Component } from \"react\";\nimport Add from \"./Input\";\nimport Header from \"./Header\";\nimport Tasks from \"./Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      items: [{\n        id: 1,\n        task: 'sfgafdsgrew'\n      }, {\n        id: 2,\n        task: 'sfgafdsgrew'\n      }, {\n        id: 3,\n        task: 'sfgafdsgrew'\n      }]\n    };\n\n    this.deletItem = id => {\n      let items = this.state.items;\n      let i = items.findIndex(item => item.id === id);\n      items.splice(i, 1);\n      this.setState({\n        items: items\n      });\n    };\n\n    this.addItem = item => {\n      item.id = Math.random();\n      let items = this.state.items;\n      items.push(item);\n      this.setState({\n        items: items\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Add, {\n        addItem: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        items: this.state.items,\n        deletItem: this.deletItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/reactstate/test2/src/components/Todo.js"],"names":["React","Component","Add","Header","Tasks","Todo","state","items","id","task","deletItem","i","findIndex","item","splice","setState","addItem","Math","random","push","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,SAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAExBK,KAFwB,GAEjB;AACHC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC;AAAX,OADG,EAEH;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC;AAAX,OAFG,EAGH;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,IAAI,EAAC;AAAX,OAHG;AADJ,KAFiB;;AAAA,SAUxBC,SAVwB,GAUXF,EAAD,IAAO;AACf,UAAID,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,UAAII,CAAC,GAAEJ,KAAK,CAACK,SAAN,CAAgBC,IAAI,IAAEA,IAAI,CAACL,EAAL,KAAYA,EAAlC,CAAP;AACAD,MAAAA,KAAK,CAACO,MAAN,CAAaH,CAAb,EAAe,CAAf;AACA,WAAKI,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACA;AAAP,OAAd;AACH,KAfuB;;AAAA,SAiBxBS,OAjBwB,GAiBdH,IAAD,IAAS;AACdA,MAAAA,IAAI,CAACL,EAAL,GAAQS,IAAI,CAACC,MAAL,EAAR;AACA,UAAIX,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACAA,MAAAA,KAAK,CAACY,IAAN,CAAWN,IAAX;AAEA,WAAKE,QAAL,CAAc;AAACR,QAAAA,KAAK,EAACA;AAAP,OAAd;AACH,KAvBuB;AAAA;;AAwBxBa,EAAAA,MAAM,GAAE;AACR,wBACI;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,KAAKJ;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAzB;AAAgC,QAAA,SAAS,EAAE,KAAKG;AAAhD;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOC;;AAhCuB","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Add from \"./Input\";\nimport Header from \"./Header\";\nimport Tasks from \"./Tasks\";\n\nclass Todo extends Component{\n\n    state ={\n        items :[\n            {id:1,task:'sfgafdsgrew'},\n            {id:2,task:'sfgafdsgrew'},\n            {id:3,task:'sfgafdsgrew'},\n        ]\n    }\n\n    deletItem = (id) =>{\n        let items = this.state.items;\n        let i =items.findIndex(item=>item.id === id)\n        items.splice(i,1)\n        this.setState({items:items})\n    }\n    \n    addItem =(item) =>{\n        item.id=Math.random();\n        let items = this.state.items;\n        items.push(item);\n   \n        this.setState({items:items})\n    }\n    render(){\n    return(\n        <div>\n         <Header/>\n         <Add addItem={this.addItem}/>\n         <Tasks items={this.state.items} deletItem={this.deletItem}/>\n      </div>\n    );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}